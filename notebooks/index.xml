<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notebooks on MLOS</title>
    <link>https://microsoft.github.io/MLOS/notebooks/</link>
    <description>Recent content in Notebooks on MLOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://microsoft.github.io/MLOS/notebooks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://microsoft.github.io/MLOS/notebooks/BayesianOptimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://microsoft.github.io/MLOS/notebooks/BayesianOptimization/</guid>
      <description>Download BayesianOptimization.ipynb notebook import matplotlib.pyplot as plt import numpy as np import pandas as pd Bayesian Optimization This notebook demonstrates the basic principles of Bayesian Optimization (BO) and how to use MLOS to perform BO.
Motivation In software performance engineering, the impact different (input) parameters (e.g. buffer size, worker thread count, etc.) can have on the (output) performance of a system for a given workload (input) can be modeled as a multidimensional function - one which we don&amp;rsquo;t know the equation for apriori, but are instead trying to learn through careful sampling of the input space and experimentation (test/benchmark runs) to gather output points.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://microsoft.github.io/MLOS/notebooks/SmartCacheCppDocker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://microsoft.github.io/MLOS/notebooks/SmartCacheCppDocker/</guid>
      <description>Download SmartCacheCppDocker.ipynb notebook Objective The goal of this notebook is to guide you through the process of executing an optimization process in Mlos.
Steps  Select build configuration. Generate the secrets file. Build the docker image. Launch the docker container. Launch Mlos.Agent. Launch SmartCache.exe benchmark.  Prerequisites  Build the Mlos project. The build configuration (Debug vs. Retail) must match your choice below. Have Docker installed and available. This notebook is run with {MLOS_ROOT}\source\Mlos.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://microsoft.github.io/MLOS/notebooks/SmartCacheOptimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://microsoft.github.io/MLOS/notebooks/SmartCacheOptimization/</guid>
      <description>Download SmartCacheOptimization.ipynb notebook Optimizing Smart Cache with Bayesian Optimization The goal of this notebook is to optimize SmartCache using Bayesian Optimization approach.
We&amp;rsquo;re using a sequential model-based optimization approach, that consists of the following loop:
 Get suggested config from optimizer, Apply suggested config to SmartCache, Execute a fixed workload, Collect the metrics from SmartCache, Register an observation with the optimizer.  # import the required classes and tools import grpc import pandas as pd from mlos.</description>
    </item>
    
  </channel>
</rss>